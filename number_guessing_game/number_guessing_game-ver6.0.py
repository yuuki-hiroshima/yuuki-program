# 作成開始日：2025年9月1日
# 作成完了日：2025年9月2日
# 著作者名：yuuki-hiroshima
# All rights reserved.

# ChatGPT 「数当てゲーム作成方法」を参照
# 範囲外（1〜100）の値は弾くようにアップデート
# 入力が弾かれた場合はヒントを出さず（もっと小さい数字です。などを表示しない）再入力に進めるようアップデート

# randomモジュール（ライブラリ）をインポート
import random

# リプレイ機能用のループ（ゲーム全体を繰り返す）
while True:

    # 1〜100のなかから、ランダムに数字を決める
    answer = random.randint(1, 100) # randint関数はランダムな小数・整数を生成する。randint関数はrandomモジュールのなかに含まれるため、randomモジュールのインポートが必要

    # 上記は冒頭で「from random import randint」としている場合、answer = randint(1, 100)と記述しても動作する。

    print("数当てゲームを始めます！") # ゲーム開始のメッセージ
    print("1〜100の数字を当ててください。") # ユーザーへのルール説明
    print("挑戦できるのは最大10回です。") # 回数制限のルールを伝える

    # 挑戦回数を超える変数（最初は0回）
    count = 0

    # 挑戦できる最大回数
    limit = 10

    # 正解するまで入力を繰り返す
    while count < limit: # 回数が制限以内の間だけ繰り返す
        guess_input = input("あなたの予想は？：") # ユーザーに入力してもらう

        # 入力が整数かチェックする
        try:
            guess = int(guess_input) # 入力を整数に変換（小数や文字列が入力されるなど、エラーが出る可能性のあるコード）
        except ValueError: # 変換できない場合（文字列や小数など）
            print("正しい整数を入力してください。") # エラーメッセージ
            continue # ループの専用に戻り、再入力させる（下の処理に進んでいないためカウントは増えない）
        
        # 数値の範囲をチェック
        if guess < 1 or guess > 100: # 1〜100の範囲外なら
            print("1〜100の範囲で入力してください。") # エラーメッセージ
            continue # ループの専用に戻り、再入力させる（下の処理に進んでいないためカウントは増えない）

        # 入力がおこなわれるごと（ループするごと）にカウントを1増やす
        count += 1

        # 答えと比較
        if guess == answer:
            print("おめでとう！正解です！")
            print(f"{count}回目で当たりました！") # f文字列で回数を表示
            break # 正解したらループを終了
        elif guess > answer: # 入力された数値より小さい場合
            print("もっと小さい数字です。")
        else: # 入力された数値より小さい場合以外（入力された数字より大きい場合）
            print("もっと大きい数字です")

        # もし回数制限に達したらゲームオーバー
        if count == limit:
            print("残念！ゲームオーバーです。") # ゲームオーバーの表示
            print(f"正解は{answer}でした。") # 正解を表示
            break # 制限回数を超えたのでループを終了

    # もう一度遊ぶかどうかを確認する
    while True:
        retry = input("もう一度遊びますか？（y/n）：") # ユーザーに再挑戦するか質問
        retry = retry.lower() # 大文字・小文字を区別しないよう小文字に変換

        if retry == "y": # "y"が入力されたら再挑戦
            break # 内側の while Trueを抜けてゲームをリスタート
        elif retry == "n": # "n"が入力されたら終了
            print("ゲームを終了します。遊んでくれてありがとう！") # 終了のメッセージ
            exit() #プログラムを終了
        else: # yでもnでもない場合
            print("正しく入力してください。（y または n）") # エラーメッセージを表示して再入力を促す